{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6f09DB4577084c6ad8d0f5fc0e3551Ed8D85a916",
      "txHash": "0xc2e36bd40f1110c5f99743634c84ff12dcbf30b8a543faa68fcbae59d51422a9",
      "kind": "uups"
    },
    {
      "address": "0xc11949cd49Daadc5bBA514CF5459afC2eC62F343",
      "txHash": "0x7cbf2ffd50f6cb0b2f24a306bcd7dfede9a453c1a1ecb2505b698bb7df7e3394",
      "kind": "uups"
    },
    {
      "address": "0x495cA91BB59101eF750ED6eEC3DF4b65199A245A",
      "txHash": "0x80b0dda204c4a1caa88c2d9bd61f9bdb0d415135b3541253f6bbcbb670d099a6",
      "kind": "uups"
    }
  ],
  "impls": {
    "7b08306307f24c1dd93cede91b3e13b7f9cbdbb7d8dacdcc58143b8d02ac2a25": {
      "address": "0x87F499d01D6100F895bB6C41698fAF456b28cBfB",
      "txHash": "0x1a2f6cea3c594129a97ea8d411d03dea0ca5a18fc9666d31160900ed60b50523",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Factory",
            "label": "initiator",
            "type": "t_address",
            "src": "contracts/Factory.sol:16"
          },
          {
            "contract": "Factory",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "contracts/Factory.sol:17"
          },
          {
            "contract": "Factory",
            "label": "vaults",
            "type": "t_contract(CRUD)1819",
            "src": "contracts/Factory.sol:18"
          },
          {
            "contract": "Factory",
            "label": "vaultToCeramic",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/Factory.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(CRUD)1819": {
            "label": "contract CRUD"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1cf19ea97303d2bcdb539f7bb734fd35f195ac848a734b37f1db25ae280af184": {
      "address": "0x5cBAC6b145a7Cf95c933C00911039d380c7b780f",
      "txHash": "0x4ba856e340a3e099485c589c9c45e81b793196238993cad53fbcd7abb49d93b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Factory",
            "label": "initiator",
            "type": "t_address",
            "src": "contracts/Factory.sol:16"
          },
          {
            "contract": "Factory",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "contracts/Factory.sol:17"
          },
          {
            "contract": "Factory",
            "label": "vaults",
            "type": "t_contract(CRUD)1819",
            "src": "contracts/Factory.sol:18"
          },
          {
            "contract": "Factory",
            "label": "vaultToCeramic",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/Factory.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(CRUD)1819": {
            "label": "contract CRUD"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fc6faca0cb2ad9df5e1974f80a7b8a559af051d8114a86a3fe576bc68c5c0184": {
      "address": "0x9792b7E76C85aee6484Fca19F9b574196A585C93",
      "txHash": "0x348254f8510872a3d4d8db0bd3149c80de8cff784586625ebf4890e7f6e43582",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Factory",
            "label": "initiator",
            "type": "t_address",
            "src": "contracts/Factory.sol:16"
          },
          {
            "contract": "Factory",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "contracts/Factory.sol:17"
          },
          {
            "contract": "Factory",
            "label": "vaults",
            "type": "t_contract(CRUD)1819",
            "src": "contracts/Factory.sol:18"
          },
          {
            "contract": "Factory",
            "label": "vaultToCeramic",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/Factory.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(CRUD)1819": {
            "label": "contract CRUD"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
